// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: admin.sql

package sqlc

import (
	"context"
)

const createAdmin = `-- name: CreateAdmin :exec
INSERT INTO admin (email, hashed_password)
VALUES ($1, $2)
`

type CreateAdminParams struct {
	Email    string `json:"email"`
	Password string `json:"hashed_password"`
}

func (q *Queries) CreateAdmin(ctx context.Context, arg CreateAdminParams) error {
	_, err := q.db.ExecContext(ctx, createAdmin, arg.Email, arg.Password)
	return err
}

const isAdmin = `-- name: IsAdmin :one
SELECT EXISTS(SELECT 1 FROM admin WHERE id = $1) AS "exists"
`

func (q *Queries) IsAdmin(ctx context.Context, id int32) (bool, error) {
	row := q.db.QueryRowContext(ctx, isAdmin, id)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
