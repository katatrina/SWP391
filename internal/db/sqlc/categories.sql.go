// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: categories.sql

package sqlc

import (
	"context"
)

const getCategoryIDBySlug = `-- name: GetCategoryIDBySlug :one
SELECT id
FROM categories
WHERE slug = $1
`

func (q *Queries) GetCategoryIDBySlug(ctx context.Context, slug string) (int32, error) {
	row := q.db.QueryRowContext(ctx, getCategoryIDBySlug, slug)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const listCategories = `-- name: ListCategories :many
SELECT id, name, slug, thumbnail_url, description
FROM categories
ORDER BY id ASC
`

func (q *Queries) ListCategories(ctx context.Context) ([]Category, error) {
	rows, err := q.db.QueryContext(ctx, listCategories)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Category{}
	for rows.Next() {
		var i Category
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Slug,
			&i.ThumbnailUrl,
			&i.Description,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
